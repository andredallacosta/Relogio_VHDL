LIBRARY IEEE;
USE IEEE.std_logic_1164.all;
USE IEEE.std_logic_arith.all;
USE IEEE.std_logic_unsigned.all;

ENTITY Contador_Sincrono_Dividido IS
port(
	reset: in std_logic;
	clock, comeco: in std_logic;
	Ain, Bin, Cin, Din, Ein, Fin: std_LOGIC_VECTOR(3 downto 0);
	Q0, Q1, Q2, Q3, Q4, Q5: out std_logic_vector(6 downto 0)
	);
end Contador_Sincrono_Dividido;

architecture arch_Contador_Sincrono_Dividido of Contador_Sincrono_Dividido is
signal new_clock: std_logic := '0';
signal A, B, C, D, E, F : STD_LOGIC_VECTOR(3 DOWNTO 0) := "0000";

component display_7
port(
		A: in std_logic_vector(3 downto 0);
		S: out std_logic_vector(6 downto 0)	
	);
end component;

component Divisor_Freq
port(
		 CLK: in std_logic;
		 COUT: out std_logic
	);
end component;

begin

Divisor: Divisor_Freq
	port map(CLK => clock, cout => new_clock);

process (new_clock)
variable aux: integer := 0;
begin
	if reset = '1' then
		aux := 0;
	elsif (comeco = '1') and (aux = 0) then
		A <= Ain;
		B <= Bin;
		C <= Cin;
		D <= Din;
		E <= Ein;
		F <= Fin;
		aux := 0;
	else
		if (comeco = '0') or (aux = 1) then
			aux := 1;
			if(new_clock'EVENT and new_clock = '1') then
				A <= A + 1;
				if A = "1001" then
					A <= "0000";
					B <= B + 1;
					if B = "0101" then
						B <= "0000";
						C <= C + 1;
						if C = "1001" then
							C <= "0000";
							D <= D + 1;
							if D = "0101" then
								D <= "0000";
								E <= E + 1;
								if E = "1001" then
									E <= "0000";
									F <= F + 1;
									if F = "0010" then
										F <= "0000";
									end if;
								end if;
							end if;
						end if;
					end if;
				end if;
			end if;
		end if;
	end if;
end process;

SEGUNDOS: display_7
	port map(A => A, S => Q0);
SEGUNDOS2: display_7
	port map(A => B, S => Q1);
MINUTOS: display_7
	port map(A => C, S => Q2);
MINUTOS2: display_7
	port map(A => D, S => Q3);
HORAS: display_7
	port map(A => E, S => Q4);
HORAS2: display_7
	port map(A => F, S => Q5);
	
end arch_Contador_Sincrono_Dividido;
